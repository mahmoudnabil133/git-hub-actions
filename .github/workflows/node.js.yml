# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, and run tests across different versions of node.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    # - name: build and push docker image

    #   uses: mr-smithers-excellent/docker-build-push@v6
    #   with: 
    #     # image: docker-hub-repo/image-name
    #     image: mahmoudnabil133/github_actions 
    #     registry: docker.io
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 20.21.146.3 >> ~/.ssh/known_hosts

    - name: Save the private key to a file
      run: |
        echo "${{ secrets.SERVER_PRIVATE_KEY }}" > ssh_key.pem
        chmod 600 ssh_key.pem

    - name: Debug SSH connection
      run: |
        echo "Debugging SSH..."
        chmod 600 ssh_key.pem
        ssh -vvv -i ssh_key.pem mahmoudnabil@20.21.146.3 'echo "Connected!"'

    - name: Deploy to server
      run: |
        echo "docker pull mahmoudnabil133/github_actions:latest" > deploy.sh
        echo "docker stop my-app || true" >> deploy.sh
        echo "docker rm my-app || true" >> deploy.sh
        echo "docker run -d --name my-app -p 80:3000 mahmoudnabil133/github_actions:latest" >> deploy.sh
        chmod +x deploy.sh
        ssh -i ssh_key.pem mahmoudnabil@20.21.146.3 'bash -s' < deploy.sh
      env:
        SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
